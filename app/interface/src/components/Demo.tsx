import "./Page.css";
import { useState } from "react";
import { Button } from "@mui/material";
import { FcApproval, FcHighPriority } from "react-icons/fc";
import { useNavigate } from "react-router-dom";

const Demo = () => {
  const [result, setResult] = useState("");
  const [accuracy, setAccuracy] = useState("");
  const [isImageSelected,setIsImageSelected] = useState(false);
  const resultTrue = "NOT GENERATED BY AI";
  const resultFalse = "GENERATED BY AI";
  const navigate = useNavigate();

  const images = [
    { src: "/chat.jpg", statut: resultTrue, accuracy: "87" },
    { src: "/chat_ia.webp", statut: resultFalse, accuracy: "91" }, //TODO : mettre les vraies accuracy du modèle
    { src: "/oiseau_ia.jpg", statut: resultFalse, accuracy: "89" },
    { src: "/oiseau.jpg", statut: resultTrue, accuracy: "85" },
  ];

  const handleImageClick = (statut: string, accuracy: string) => {
    setIsImageSelected(true);
    setResult(statut);
    setAccuracy(accuracy); 
  };

  const DisplayResult = () => {
    if (result === resultTrue) {
      return <h3> {result} <FcApproval/></h3>
    } else if (result === resultFalse){
      return <h3> {result} <FcHighPriority /></h3>
    } else {
      console.error("Erreur : Le modèle n'a pas fournit de résultat");
      return <h3> Fonctionnalité pas encore implémentée </h3>
    }
  }

  return (
    <div className="page">
        <div className="instructions">
            <p>Select one of the following image to see if it is authentic or generated by an AI</p>
        </div>
        <div
        style={{
            display: "grid",
            gridTemplateColumns: "repeat(2, 1fr)",
            gap: "20px",
            justifyItems: "center",
            maxWidth: "800px",
            margin: "0 auto",
          }}
      >
        {images.map((image) => (
          <img
          key={image.src}
          src={image.src}
          alt="Preview"
          className="image" 
          onClick={() => handleImageClick(image.statut, image.accuracy)}
          />
        ))}
      </div>
        {isImageSelected ? (
            <div className="page">
            <h2> After analysis, this image is : </h2>
            <DisplayResult/>
            <h3> Accuracy of the result : {accuracy}% </h3>
            </div>
        ) : (null)} 
        <Button
        variant="contained"
        onClick={() => navigate("/home")}
        sx={{
            marginTop:"20px",
            backgroundColor: "#65b2a0",
            color: "#fff",
            "&:hover": { backgroundColor: "#386258" },
        }}
        >
        Home page
        </Button>
    </div>
  );
};

export default Demo;
