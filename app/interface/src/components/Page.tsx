import { FileUploader } from "react-drag-drop-files";
import "./Page.css";
import { useState } from "react";
import { Button } from "@mui/material";
import CheckIcon from '@mui/icons-material/Check';
import CloseIcon from '@mui/icons-material/Close';
import axios from 'axios';

const fileTypes = ["JPG"];

const Page = () => {
  const [file, setFile] = useState<File | null>(null);
  const [disableButton, setDisableButton] = useState(true);
  const [result, setResult] = useState("");
  const [accuracy, setAccuracy] = useState(null);
  const [fileURL, setFileURL] = useState<string | null>(null); // Pour stocker l'URL de l'image
  const [displayDragAndDropPage,setDisplayDragAndDropPage] = useState("DRAGANDDROP");
  const API_BASE_URL = 'http://localhost:8080/predict/image';

  const resultTrue = "NOT GENERATED BY AI";
  const resultFalse = "GENERATED BY AI";


  const handleChange = (file: File) => {
    setFile(file);
    setDisableButton(file == null);

    // Générer l'URL de l'image et l'enregistrer
    if (file) {
      const imageUrl = URL.createObjectURL(file);
      setFileURL(imageUrl);
    }
  };

  const handleDisplayDragAndDropPage = (value:string) => {
    setDisplayDragAndDropPage(value);
    if (value === "DRAGANDDROP") {
      setDisableButton(true);
      setFileURL(null); // Réinitialiser l'URL si nécessaire
      setFile(null);
      setResult("");
      setAccuracy(null);
    } else {
        // On envoie l'image au modèle
        if (file) {
          const formData = new FormData();
          formData.append('image', file);
  
          axios.post(
            API_BASE_URL,
            formData,
          {
            headers: {
              'Content-Type': 'multipart/form-data',
            },
          }
        ).then(function (response) {
          const data = response.data;
          if (data && typeof data === 'object') {
            if ('prediction' in data && 'confidence' in data) {
              if (data.prediction === "real"){
                setResult(resultTrue);
              } else if (data.prediction === "fake") {
                setResult(resultFalse);
              } else {
                console.error("Erreur : mauvais format de prediction");
              }
              setAccuracy(data.confidence);
              if (result != null && accuracy != null){
                console.log("Réponse valide : ", data);
              } else {
                console.error("Réponse invalide : ", data);
              }
            } else {
              console.error("Clés manquantes dans la réponse : ", data);
            }
          } else {
            console.error('La réponse n\'est pas un objet JSON valide :', response);
          } 
        }).catch(function (error) {
          console.error('Error uploading file:', error);
        });
      }

    }
  }

  const DisplayResult = () => {
    if (result === resultTrue) {
      return <h3> {result} <CheckIcon/></h3>
    } else if (result === resultFalse){
      return <h3> {result} <CloseIcon/></h3>
    } else {
      console.error("Erreur : Le modèle n'a pas fournit de résultat");
      return <h3> Fonctionnalité pas encore implémentée </h3>
    }
  }


  return (
    <div className="page">
      {displayDragAndDropPage === "DRAGANDDROP" ? (
        <div>
          <div className="page">
            <div className="instructions">
              <p>This website was created to help you determine if an image is real or generated by an AI.<br/>
              Please upload the image you want to test on format JPG on your desktop and Drag & Drop it here</p>
            </div>
            <FileUploader
              multiple={false}
              handleChange={handleChange}
              name="file"
              types={fileTypes}
            />
            <p>{file != null ? `File name: ${file.name}` : "No file uploaded yet"}</p>
            {fileURL && <img src={fileURL} alt="Preview" style={{ maxWidth: "100%", maxHeight: "300px" }} />}
          </div>
          <Button
            disabled={disableButton}
            variant="contained"
            onClick={() => handleDisplayDragAndDropPage("RESULTS")}
            sx={{
              marginTop:"20px",
              backgroundColor: "#65b2a0",
              color: "#fff",
              "&:hover": { backgroundColor: "#386258" },
            }}
          >
            Go
          </Button>
        </div>
      ) : (
        <div className="page">
          {fileURL && <img src={fileURL} alt="Uploaded" style={{ maxWidth: "100%", maxHeight: "350px"}} />}
          <h2> After analysis, this image is : </h2>
          <DisplayResult/>
          <h3> Accuracy of the result : {accuracy}% </h3>
          <Button
          variant="contained"
          onClick={() => handleDisplayDragAndDropPage("DRAGANDDROP")}
          sx={{
            backgroundColor: "#65b2a0",
            color: "#fff",
            "&:hover": { backgroundColor: "#386258" },
          }}
          >
            Analyze an other image
          </Button>
        </div>
      )}
    </div>
  );
};

export default Page;
